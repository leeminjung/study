 // useEffect 함수 불러오기
 import React, {useEffect} from 'react';
 
 
 // 1) 컴포넌터가 화면에 가장 처음 렌더링 될 때 한번만 실행하고 싶을 때는 deps 위치에 빈배열을 넣는다.
 useEffect(() => {
    console.log('마운트 될 때만 실행된다');
  },[]);
  
  // 2) 만약 빈배열을 생략한다면 리렌더링 될 때 마다 실행된다.
  
  useEffect(() => {
    console.log('렌더링 될 때 마다 실행된다');
    });
    
   // 3) 특정값이 업데이트 될 때 실행하고 싶을 때는 deps 위치의 배열 안에 검사하고 싶은 값을 넣어준다.
  // (의존값이 들어있는 배열 deps이라고도 한다. dependency를 의미.)
  
   useEffect(() => {
   console.log(name);
   console.log('업데이트 될 때 실행된다');
   } , [name]);
   
   
   //업데이트 될 때만 특정 함수를 실행하고 싶다면?
   
   //(코드 생략)
   
   const mounted = useRef(false);
   
   useEffect(() => {
    if (!mounted.current){
        mounted.current = true;
        } else {
        //ajax
        }
      }, [바뀌는 값]);
      
     //코드생략
     // -> 컴포넌트가 마운트 될 때는 if 문에서 아무것도 실행하지 않고 mounted 값만 바꿔주고,
     // else 에서 배열 안에 있는 값이 바뀌면, ajax 서버통신이라던지 원하는 코드를 실행할 수 있다.
     
     
     
    //Component가 unmount될 때 (사라질 때) & update되기 직전에.
    // - cleanup 함수반환 (return뒤에 나오는 함수이며 useEffect에 대한 뒷정리 함수라고 한다.)
    // - 언마운트 될 때만 cleanup 함수를 실행하고 싶을 때 : 두번째 파라미터로 빈 배열을 넣는다.
    // - 특정 값이 업데이트 되기 직전에 cleanup 함수를 실행하고 싶을 때 : deps 배열 안에 검사하고 싶은 값을 넣어준다.
    
    useEffect (() => {
      console.log('effect');
      console.lig(name);
      return () => {
      console.log('cleanup');
      console.log(name);
      };
     }, []);
     
     
     // deps에 특정 값 넣기!
     //deps에 특정 값을 넣게 된다면 컴포넌트가 처음 마운트 될 때, 지정한 값이 바뀔 때, 언마운트 될 때, 값이 바뀌기 직전에 모두 호출 된다.
     // useEffect 안에서 사용하는 상태나, props가 있다면, useEffect의 deps에 넣어주어야 하는 것이 규칙이다.
     //만약에 사용하는 값을 넣어주지 않는다면, useEffect안에 함수가 실행될 때 최신 상태, props를 가리키지 않는다.
     
     //deps 파라미터를 생략한다면, 컴포넌트가 리렌더링 될 때 마다 useEffect함수가 호출 된다.
     
     
     
     
   
   
 
 
